{
    "swagger": "2.0",
    "info": {
      "title": "SuperTrader API",
      "description": "API documentation for SuperTrader application",
      "version": "1.0"
    },
    "basePath": "/",
    "tags": [
      {
        "name": "Authentication",
        "description": "Endpoints for user authentication"
      },
      {
        "name": "User",
        "description": "Endpoints for user operations"
      },
      {
        "name": "Admin",
        "description": "Endpoints for admin operations"
      },
      {
        "name": "Quote",
        "description": "Endpoints for fetching stock quotes"
      }
    ],
    "paths": {
      "/login": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "User login endpoint.",
          "description": "Endpoint for user login with username and password.",
          "parameters": [
            {
              "name": "username",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Username of the user"
            },
            {
              "name": "password",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Password of the user"
            }
          ],
          "responses": {
            "200": {
              "description": "User login successful"
            },
            "401": {
              "description": "Invalid username or password"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/register": {
        "post": {
          "tags": [
            "Authentication"
          ],
          "summary": "User registration endpoint.",
          "description": "Endpoint for user registration with username and password.",
          "parameters": [
            {
              "name": "username",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Username of the user"
            },
            {
              "name": "password",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Password of the user"
            }
          ],
          "responses": {
            "200": {
              "description": "Registration successful"
            },
            "409": {
              "description": "User already exists"
            }
          }
        }
      },
      "/buy": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Buy stock endpoint.",
          "description": "Endpoint for buying stocks.",
          "parameters": [
            {
              "name": "instrument_identifier",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Instrument identifier of the stock to buy"
            },
            {
              "name": "quantity",
              "in": "formData",
              "type": "integer",
              "required": true,
              "description": "Quantity of stocks to buy"
            },
            {
              "name": "user_id",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "ID of the user buying the stock"
            }
          ],
          "responses": {
            "200": {
              "description": "Purchase successful"
            },
            "404": {
              "description": "Instrument not found"
            },
            "400": {
              "description": "Insufficient funds or other errors"
            }
          }
        }
      },
      "/sell": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Sell stock endpoint.",
          "description": "Endpoint for selling stocks.",
          "parameters": [
            {
              "name": "instrument_identifier",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Instrument identifier of the stock to sell"
            },
            {
              "name": "quantity",
              "in": "formData",
              "type": "integer",
              "required": true,
              "description": "Quantity of stocks to sell"
            },
            {
              "name": "user_id",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "ID of the user selling the stock"
            }
          ],
          "responses": {
            "200": {
              "description": "Sale successful"
            },
            "404": {
              "description": "Instrument not found"
            },
            "400": {
              "description": "Insufficient stocks or other errors"
            }
          }
        }
      },
      "/user/{user_id}/purchase_history": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get user purchase history endpoint.",
          "description": "Endpoint for fetching purchase history of a user.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "string",
              "required": true,
              "description": "ID of the user whose purchase history is to be fetched"
            }
          ],
          "responses": {
            "200": {
              "description": "Purchase history fetched successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user/{user_id}/sell_history": {
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get user sell history endpoint.",
          "description": "Endpoint for fetching sell history of a user.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "string",
              "required": true,
              "description": "ID of the user whose sell history is to be fetched"
            }
          ],
          "responses": {
            "200": {
              "description": "Sell history fetched successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/user/{user_id}/favorite_symbols": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Add favorite symbol endpoint.",
          "description": "Endpoint for adding a favorite symbol for a user.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "string",
              "required": true,
              "description": "ID of the user to add favorite symbol"
            },
            {
              "name": "favorite_stocks",
              "in": "body",
              "type": "array",
              "items": {
                "type": "string"
              },
              "required": true,
              "description": "List of favorite stocks to add"
            }
          ],
          "responses": {
            "200": {
              "description": "Favorite symbols updated successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "get": {
          "tags": [
            "User"
          ],
          "summary": "Get favorite symbols endpoint.",
          "description": "Endpoint for fetching favorite symbols of a user.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "string",
              "required": true,
              "description": "ID of the user whose favorite symbols are to be fetched"
            }
          ],
          "responses": {
            "200": {
              "description": "Favorite symbols fetched successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": [
            "User"
          ],
          "summary": "Delete favorite symbol endpoint.",
          "description": "Endpoint for deleting a favorite symbol for a user.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "string",
              "required": true,
              "description": "ID of the user to delete favorite symbol"
            },
            {
              "name": "favorite_stock",
              "in": "body",
              "type": "string",
              "required": true,
              "description": "Symbol of the favorite stock to delete"
            }
          ],
          "responses": {
            "200": {
              "description": "Favorite symbol deleted successfully"
            },
            "404": {
              "description": "User or favorite symbol not found"
            }
          }
        }
      },
      "/create_admin": {
        "post": {
          "tags": [
            "Admin"
          ],
          "summary": "Create admin endpoint.",
          "description": "Endpoint for creating a new admin account.",
          "parameters": [
            {
              "name": "username",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Username of the new admin"
            },
            {
              "name": "password",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Password of the new admin"
            },
            {
              "name": "email",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Email of the new admin"
            }
          ],
          "responses": {
            "200": {
              "description": "Admin created successfully"
            }
          }
        }
      },
      "/create_user": {
        "post": {
          "tags": [
            "Admin"
          ],
          "summary": "Create user endpoint.",
          "description": "Endpoint for creating a new user account.",
          "parameters": [
            {
              "name": "username",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Username of the new user"
            },
            {
              "name": "password",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Password of the new user"
            },
            {
              "name": "email",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "Email of the new user"
            },
            {
              "name": "role",
              "in": "formData",
              "type": "string",
              "description": "Role of the new user (default is 'user')"
            }
          ],
          "responses": {
            "200": {
              "description": "User created successfully"
            }
          }
        }
      },
      "/pause_user": {
        "post": {
          "tags": [
            "Admin"
          ],
          "summary": "Pause user endpoint.",
          "description": "Endpoint for pausing a user account.",
          "parameters": [
            {
              "name": "user_id",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "ID of the user to pause"
            }
          ],
          "responses": {
            "200": {
              "description": "User paused successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/ban_user": {
        "post": {
          "tags": [
            "Admin"
          ],
          "summary": "Ban user endpoint.",
          "description": "Endpoint for banning a user account.",
          "parameters": [
            {
              "name": "user_id",
              "in": "formData",
              "type": "string",
              "required": true,
              "description": "ID of the user to ban"
            }
          ],
          "responses": {
            "200": {
              "description": "User banned successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/get_user_history/{user_id}": {
        "get": {
          "tags": [
            "Admin"
          ],
          "summary": "Get user history endpoint.",
          "description": "Endpoint for fetching purchase history of a user.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "type": "string",
              "required": true,
              "description": "ID of the user whose history is to be fetched"
            }
          ],
          "responses": {
            "200": {
              "description": "User history fetched successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/get_ltp": {
        "get": {
          "tags": [
            "Quote"
          ],
          "summary": "Get last trade price endpoint.",
          "description": "Endpoint for fetching the last trade price of a stock.",
          "parameters": [
            {
              "name": "instrument_identifier",
              "in": "query",
              "type": "string",
              "required": true,
              "description": "Instrument identifier of the stock"
            }
          ],
          "responses": {
            "200": {
              "description": "Last trade price fetched successfully"
            },
            "404": {
              "description": "Instrument not found"
            }
          }
        }
      },
      "/get_all_instrument_identifiers": {
        "get": {
          "tags": [
            "Quote"
          ],
          "summary": "Get all instrument identifiers endpoint.",
          "description": "Endpoint for fetching all instrument identifiers.",
          "responses": {
            "200": {
              "description": "Instrument identifiers fetched successfully"
            }
          }
        }
      },
      "/get_quote_details": {
        "get": {
          "tags": [
            "Quote"
          ],
          "summary": "Get quote details endpoint.",
          "description": "Endpoint for fetching details of a stock.",
          "parameters": [
            {
              "name": "instrument_identifier",
              "in": "query",
              "type": "string",
              "required": true,
              "description": "Instrument identifier of the stock"
            }
          ],
          "responses": {
            "200": {
              "description": "Quote details fetched successfully"
            },
            "404": {
              "description": "Instrument details not found"
            }
          }
        }
      }
    }
  }
  